<?php

// Credenciales
$llavePublica = $block->getLlavePublica();

$activeMultiPay = $block->getData('activeMultiPay');
$orderIdCq      = $block->getData('orderIdCq');

$orderId      = $block->getData('dataOrder')['orderId'];
$currencyCode = $block->getData('dataOrder')['currency_code'];
$productName  = $block->getData('dataOrder')['description'];
$first_name   = $block->getData('dataOrder')['first_name'];
$email        = $block->getData('dataOrder')['email'];

$total     = number_format($block->getData('dataOrder')['amount'],2,'','');
$storeName = array_map('trim',explode("\n",$block->getData('dataOrder')['store_name']))[0];     

?>

<!-- Culqi Order -->

<h3><?php echo __('Paga con tarjeta Visa, Mastercard, American Express o DinersClub') ?></h3>

<p>
Para finalizar tu compra puedes pagar con tarjeta de crédito o débito (Visa, MasterCard, AMEX o DinersClub), en caso contrario puedes optar por 
pagar con efectivo.  
</p> 

<br>


Tu número de orden: <?php echo $orderId; ?> <br> <br>
<h5>Hacer Click en pagar para proceder con la compra o cancelar para regresar al paso anterior</h5><br><br>

<button id="btn_pago" class="action primary">Pagar</button>
&nbsp;&nbsp;&nbsp;&nbsp;
<button id="btn_cancelar" class="action primary" style="background-color: rgb(250,68,68); border:rgb(250,68,68)">Cancelar</button><br><br>
<div id="response">
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
<script type="text/javascript" src="https://checkout.culqi.com/js/v3"></script>

        <script type="text/javascript">

            $('#btn_cancelar').on('click', function(e) {
              post("<?php echo $block->getUrl('pago/payment/gateway'); ?>", jsonResponse('cancelado_por_usuario'));
            });

            Culqi.publicKey  = '<?= $llavePublica ?>';

            Culqi.settings({
                title: '<?= $storeName ?>',
                currency: '<?= $currencyCode ?>',
                description: '<?= $productName ?>',
                amount: '<?= $total ?>', 
                <?php
                  if($activeMultiPay && isset($orderIdCq)) {
                ?>
                order: '<?= $orderIdCq ?>'  
                <?php
                  }
                ?>

            });
            // Activa el botón de pago
            $('#btn_pago').on('click', function(e) {
              Culqi.open();
              e.preventDefault();
            });

        
            function culqi() { 

              <?php
                if(!$activeMultiPay) {
              ?> 
            
              // Only cards  

              if(Culqi.error) {
                // Mostramos JSON de objeto error en consola
                $('#response').html(Culqi.error.merchant_message);
                $('body').waitMe('hide');
              } else {
                $(document).ajaxStart(function(){
                  run_waitMe();
                  });
                $.ajax({  
                      url: "<?php echo $block->getUrl('pago/payment/check');?>",
                      type: "POST",
                      timeout: 30000,
                      data: { token_id: Culqi.token.id, order_id: '<?= $orderId ?>', installments: Culqi.token.metadata.installments },
                      dataType: 'json',
                      type : 'post',
                      success: function(data) {
                        var obj = JSON.parse(data);

                        if( obj.object === "error"){
                          resultdiv(obj.user_message);
                          post("<?php echo $block->getUrl('pago/payment/gateway'); ?>", jsonResponse('fail'));
                      
                      } else if( obj.object === "charge") {
                          resultdiv(obj.outcome.user_message);
                          post("<?php echo $block->getUrl('pago/payment/gateway'); ?>", jsonResponse('done'));

                          Culqi.close();                        
                      } else {
                          resultdiv('Hubo algun problema en el procesamiento.');
                      }

                      },
                      error: function() {
                        resultdiv('Hubo algún problema en el procesamiento de la compra. Intenta nuevamente por favor.');
                      }
                    });  
                }
            
              <?php
                  } else {     
              ?> 
        
            // Multipayment  

            if(Culqi.error) {
                // Mostramos JSON de objeto error en consola
                $('#response').html(Culqi.error.merchant_message);
                $('body').waitMe('hide');
            } else if (Culqi.token) {
                console.log(Culqi.token.id);

                $(document).ajaxStart(function(){
                  run_waitMe();
                });

                $.ajax({    
                    url: "<?php echo $block->getUrl('pago/payment/check');?>",
                    type: "POST",
                    timeout: 30000,
                    data: { token_id: Culqi.token.id, order_id: '<?= $orderId ?>', installments: Culqi.token.metadata.installments },
                    dataType: 'json',
                    type: 'post',
                    success: function(data) {
                        var obj = JSON.parse(data);
                        if(obj.object === "error"){
                            resultdiv(obj.user_message);
                            post("<?php echo $block->getUrl('pago/payment/gateway'); ?>", jsonResponse('fail'));
                        }
                        else if (obj.object === "charge"){
                            resultdiv(obj.outcome.user_message);
                            post("<?php echo $block->getUrl('pago/payment/gateway'); ?>", jsonResponse('done'));
                        }
                        else { resultdiv('Hubo algun problema en el procesamiento.'); }
                    },
                    error: function() {
                        resultdiv('Hubo algún problema en el procesamiento de la compra. Intenta nuevamente por favor.');
                    }
                });
            } else if (Culqi.order) {
                    console.log('Orden Confirmada correctamente');
                    resultdiv('Orden confirmada correctamente como pendiente pago. No cierres esta página aún...');
                    post("<?php echo $block->getUrl('pago/payment/gateway'); ?>", jsonResponse('pending_payment'));
                } else if (Culqi.closeEvent){
                        console.log(Culqi.closeEvent);
                    }
            
            <?php  } ?>

           };

            function run_waitMe(){
              $('body').waitMe({
                effect: 'pulse',
                text: 'Procesando pago...',
                bg: 'rgba(255,255,255,0.7)',
                color:'#28d2c8'
              });
            }

            function jsonResponse(message){
                return JSON.stringify({
                    orderId: '<?php echo $orderId; ?>',
                    statusOrder: message
                });
            };

            function resultdiv(message){
                $('#response').html(message);
                $('body').waitMe('hide');
            }

            /*
            waitMe - 1.18 [23.09.16]
            Author: vadimsva
            Github: https://github.com/vadimsva/waitMe
            */
            (function(b){b.fn.waitMe=function(p){return this.each(function(){var f=b(this),x,g,e,r=!1,t="background-color",u="",q="",v,a,w,l={init:function(){function y(a){m.css({top:"auto",transform:"translateY("+a+"px) translateZ(0)"})}a=b.extend({effect:"bounce",text:"",bg:"rgba(255,255,255,0.7)",color:"#000",maxSize:"",textPos:"vertical",fontSize:"",source:"",onClose:function(){}},p);w=(new Date).getMilliseconds();v=b('<div class="waitMe" data-waitme_id="'+w+'"></div>');switch(a.effect){case "none":e=0;break;
            case "bounce":e=3;break;case "rotateplane":e=1;break;case "stretch":e=5;break;case "orbit":e=2;r=!0;break;case "roundBounce":e=12;break;case "win8":e=5;r=!0;break;case "win8_linear":e=5;r=!0;break;case "ios":e=12;break;case "facebook":e=3;break;case "rotation":e=1;t="border-color";break;case "timer":e=2;var c=b.isArray(a.color)?a.color[0]:a.color;u="border-color:"+c;break;case "pulse":e=1;t="border-color";break;case "progressBar":e=1;break;case "bouncePulse":e=3;break;case "img":e=1}""!==u&&(u+=";");
            if(0<e){if("img"===a.effect)q='<img src="'+a.source+'">';else for(var d=1;d<=e;++d)b.isArray(a.color)?(c=a.color[d],void 0==c&&(c="#000")):c=a.color,q=r?q+('<div class="waitMe_progress_elem'+d+'"><div style="'+t+":"+c+'"></div></div>'):q+('<div class="waitMe_progress_elem'+d+'" style="'+t+":"+c+'"></div>');g=b('<div class="waitMe_progress '+a.effect+'" style="'+u+'">'+q+"</div>")}a.text&&(c=b.isArray(a.color)?a.color[0]:a.color,x=b('<div class="waitMe_text" style="color:'+c+";"+(""!=a.fontSize?"font-size:"+
            a.fontSize:"")+'">'+a.text+"</div>"));var k=f.find("> .waitMe");k&&k.remove();c=b('<div class="waitMe_content '+a.textPos+'"></div>');c.append(g,x);v.append(c);"HTML"==f[0].tagName&&(f=b("body"));f.addClass("waitMe_container").attr("data-waitme_id",w).append(v);var k=f.find("> .waitMe"),m=f.find(".waitMe_content");k.css({background:a.bg});""!==a.maxSize&&"none"!=a.effect&&(c=g.outerHeight(),g.outerWidth(),"img"===a.effect?(g.css({height:a.maxSize+"px"}),g.find(">img").css({maxHeight:"100%"}),m.css({marginTop:-m.outerHeight()/
            2+"px"})):a.maxSize<c&&("stretch"==a.effect?(g.css({height:a.maxSize+"px",width:a.maxSize+"px"}),g.find("> div").css({margin:"0 5%"})):(c=a.maxSize/c-.2,d="-50%","roundBounce"==a.effect?d="-75%":"win8"==a.effect||"timer"==a.effect||"orbit"==a.effect?d="-20%":"ios"==a.effect&&(d="-15%"),g.css({transform:"scale("+c+") translateX("+d+")",whiteSpace:"nowrap"}))));m.css({marginTop:-m.outerHeight()/2+"px"});if(f.outerHeight()>b(window).height()){var c=b(window).scrollTop(),h=m.outerHeight(),n=f.offset().top,
            l=f.outerHeight(),d=c-n+b(window).height()/2;0>d&&(d=Math.abs(d));0<=d-h&&d+h<=l?n-c>b(window).height()/2&&(d=h):d=c>n+l-h?c-n-h:c-n+h;y(d);b(document).scroll(function(){var a=b(window).scrollTop()-n+b(window).height()/2;0<=a-h&&a+h<=l&&y(a)})}k.on("destroyed",function(){if(a.onClose&&b.isFunction(a.onClose))a.onClose();k.trigger("close")});b.event.special.destroyed={remove:function(a){a.handler&&a.handler()}};return k},hide:function(){var a=f.attr("data-waitme_id");f.removeClass("waitMe_container").removeAttr("data-waitme_id");
            f.find('.waitMe[data-waitme_id="'+a+'"]').remove()}};if(l[p])return l[p].apply(this,Array.prototype.slice.call(arguments,1));if("object"===typeof p||!p)return l.init.apply(this,arguments)})};b(window).on("load",function(){b("body.waitMe_body").addClass("hideMe");setTimeout(function(){b("body.waitMe_body").find(".waitMe_container:not([data-waitme_id])").remove();b("body.waitMe_body").removeClass("waitMe_body hideMe")},200)})})(jQuery);


            function post(url, json){
                    // Convertimos el json en un objeto
                  var obj = JSON.parse(json);

                  // Creamos un array con los nombres de las propiedades del objeto
                  var objKeys = Object.keys(obj);
                  // Creamos elementos <input> con el name=clave y value=valor del objeto
                  var inputs = [];
                  for (i = 0; i < objKeys.length; i++) {
                    inputs[i] = document.createElement('input');
                    inputs[i].name = objKeys[i];
                    inputs[i].value = obj[objKeys[i]];
                  }

                  var form = document.createElement('form');
                  document.body.appendChild(form);
                  form.action = url;
                  form.method = 'post';
                  for (i = 0; i < objKeys.length; i++) {
                    form.appendChild(inputs[i]);
                  }
                  form.submit();
            }
        

        </script>   